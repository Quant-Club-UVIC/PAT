"""init schema

Revision ID: 76aa5a36b6f3
Revises: 
Create Date: 2025-09-26 16:11:11.284502

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '76aa5a36b6f3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('etfs',
    sa.Column('etf_id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('etf_id')
    )
    op.create_table('company_etf_association',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('etf_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.ForeignKeyConstraint(['etf_id'], ['etfs.etf_id'], ),
    sa.PrimaryKeyConstraint('company_id', 'etf_id')
    )
    op.create_table('corp_actions',
    sa.Column('action_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('action_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('action_type', sa.String(), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('detail', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.PrimaryKeyConstraint('action_id')
    )
    op.create_table('financial_statements',
    sa.Column('statement_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('statement_type', sa.String(), nullable=True),
    sa.Column('period_type', sa.String(), nullable=True),
    sa.Column('fiscal_year', sa.Integer(), nullable=True),
    sa.Column('statement_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.PrimaryKeyConstraint('statement_id'),
    sa.UniqueConstraint('company_id')
    )
    op.create_table('stocks',
    sa.Column('price_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('etf_id', sa.Integer(), nullable=True),
    sa.Column('price_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('open_price', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('high_price', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('low_price', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('close_price', sa.DOUBLE_PRECISION(), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.CheckConstraint('(company_id IS NOT NULL AND etf_id IS NULL) OR (company_id IS NULL AND etf_id IS NOT NULL)', name='ck_stock_exactly_one_owner'),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.ForeignKeyConstraint(['etf_id'], ['etfs.etf_id'], ),
    sa.PrimaryKeyConstraint('price_id'),
    sa.UniqueConstraint('company_id'),
    sa.UniqueConstraint('etf_id')
    )
    op.create_table('financial_metrics',
    sa.Column('metric_id', sa.Integer(), nullable=False),
    sa.Column('statement_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('metric_name', sa.String(), nullable=True),
    sa.Column('metric_value', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.company_id'], ),
    sa.ForeignKeyConstraint(['statement_id'], ['financial_statements.statement_id'], ),
    sa.PrimaryKeyConstraint('metric_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('financial_metrics')
    op.drop_table('stocks')
    op.drop_table('financial_statements')
    op.drop_table('corp_actions')
    op.drop_table('company_etf_association')
    op.drop_table('etfs')
    op.drop_table('companies')
    # ### end Alembic commands ###
